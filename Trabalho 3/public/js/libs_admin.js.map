{"version":3,"sources":["String.js","number_format.js","format.js","round.js","initial.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtvDA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"libs_admin.js","sourcesContent":["if (typeof String.prototype.contains === 'undefined') {\r\n    String.prototype.contains = function (it) {\r\n        return this.indexOf(it) != -1;\r\n    };\r\n}\r\n\r\n/**\r\n * 'my name {0},{1}'.format('joh','doug')\r\n * output: my name joh,doug\r\n * @return string\r\n */\r\nif (typeof String.prototype.format === 'undefined') {\r\n    String.prototype.format = function () {\r\n        var args = arguments;\r\n        return this\r\n            .replace(/%7B/g, '{')\r\n            .replace(/%7D/g, '}')\r\n            .replace(/{(\\d+)}/g, function (match, number) {\r\n                return typeof args[number] != 'undefined' ? args[number] : match;\r\n            });\r\n    };\r\n}\r\n","function number_format(number, decimals, dec_point, thousands_sep) {\r\n    //  discuss at: http://phpjs.org/functions/number_format/\r\n    // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\r\n    // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n    // improved by: davook\r\n    // improved by: Brett Zamir (http://brett-zamir.me)\r\n    // improved by: Brett Zamir (http://brett-zamir.me)\r\n    // improved by: Theriault\r\n    // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n    // bugfixed by: Michael White (http://getsprink.com)\r\n    // bugfixed by: Benjamin Lupton\r\n    // bugfixed by: Allan Jensen (http://www.winternet.no)\r\n    // bugfixed by: Howard Yeend\r\n    // bugfixed by: Diogo Resende\r\n    // bugfixed by: Rival\r\n    // bugfixed by: Brett Zamir (http://brett-zamir.me)\r\n    //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\r\n    //  revised by: Luke Smith (http://lucassmith.name)\r\n    //    input by: Kheang Hok Chin (http://www.distantia.ca/)\r\n    //    input by: Jay Klehr\r\n    //    input by: Amir Habibi (http://www.residence-mixte.com/)\r\n    //    input by: Amirouche\r\n    //   example 1: number_format(1234.56);\r\n    //   returns 1: '1,235'\r\n    //   example 2: number_format(1234.56, 2, ',', ' ');\r\n    //   returns 2: '1 234,56'\r\n    //   example 3: number_format(1234.5678, 2, '.', '');\r\n    //   returns 3: '1234.57'\r\n    //   example 4: number_format(67, 2, ',', '.');\r\n    //   returns 4: '67,00'\r\n    //   example 5: number_format(1000);\r\n    //   returns 5: '1,000'\r\n    //   example 6: number_format(67.311, 2);\r\n    //   returns 6: '67.31'\r\n    //   example 7: number_format(1000.55, 1);\r\n    //   returns 7: '1,000.6'\r\n    //   example 8: number_format(67000, 5, ',', '.');\r\n    //   returns 8: '67.000,00000'\r\n    //   example 9: number_format(0.9, 0);\r\n    //   returns 9: '1'\r\n    //  example 10: number_format('1.20', 2);\r\n    //  returns 10: '1.20'\r\n    //  example 11: number_format('1.20', 4);\r\n    //  returns 11: '1.2000'\r\n    //  example 12: number_format('1.2000', 3);\r\n    //  returns 12: '1.200'\r\n    //  example 13: number_format('1 000,50', 2, '.', ' ');\r\n    //  returns 13: '100 050.00'\r\n    //  example 14: number_format(1e-8, 8, '.', '');\r\n    //  returns 14: '0.00000001'\r\n\r\n    number = (number + '')\r\n        .replace(/[^0-9+\\-Ee.]/g, '');\r\n    var n = !isFinite(+number) ? 0 : +number,\r\n        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n        sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\r\n        dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n        s = '',\r\n        toFixedFix = function(n, prec) {\r\n            var k = Math.pow(10, prec);\r\n            return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n        };\r\n    // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n    s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n        .split('.');\r\n    if (s[0].length > 3) {\r\n        s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n    }\r\n    if ((s[1] || '')\r\n            .length < prec) {\r\n        s[1] = s[1] || '';\r\n        s[1] += new Array(prec - s[1].length + 1)\r\n            .join('0');\r\n    }\r\n    return s.join(dec);\r\n}","var Format = {\r\n    /**\r\n     * 17528727000149 -> 17.528.727/0001-49\r\n     * @returns {string}\r\n     */\r\n    cnpj: function (value) {\r\n        if (!value) return value;\r\n        value = value.toString().replace(/\\D/g, \"\"); //only number\r\n        value = value.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/, '$1.$2.$3/$4-$5');//format cnpj\r\n        return value;\r\n    },\r\n    /**\r\n     * 08144225947 -> 081.442.259-47\r\n     * @returns {string|*}\r\n     */\r\n    cpf: function (value) {\r\n        if (!value) return value;\r\n        value = value.toString().replace(/\\D/g, \"\"); //only number\r\n        value = value.replace(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/, '$1.$2.$3-$4');\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * 88430700 -> 88070-430\r\n     * @returns {string|*}\r\n     */\r\n    cep: function (value) {\r\n        if (!value) return value;\r\n        value = value.toString().replace(/\\D/g, \"\"); //only number\r\n        value = value.replace(/^(\\d{5})(\\d{3})$/, '$1-$2');\r\n        return value;\r\n    },\r\n    preco: function (value, fixed, preffix) {\r\n        if (!value) return value;\r\n        fixed = (typeof fixed === 'undefined') ? 2 : fixed;\r\n        preffix = (typeof preffix === 'undefined') ? 'R$ ' : preffix;\r\n        value = number_format(value, fixed, ',', '.');\r\n        return preffix + value;\r\n    },\r\n    porcentagem: function (value, fixed, suffix) {\r\n        if (!value) return value;\r\n        fixed = (typeof fixed === 'undefined') ? 2 : fixed;\r\n        suffix = (typeof suffix === 'undefined') ? '%' : suffix;\r\n        return (value * 100).toFixed(fixed) + suffix;\r\n    }\r\n\r\n\r\n    ///**\r\n    // * ABC1234 -> ABC-1234\r\n    // * @returns {string}\r\n    // */\r\n    //placa: function (value) {\r\n    //    value = value.replace(/^(\\w{3})(\\d{4})$/, '$1-$2');\r\n    //    return value;\r\n    //}\r\n};","function round(num, fixed) {\r\n    fixed = typeof fixed === 'undefined' ? 2 : fixed;\r\n    var mult = Math.pow(10, fixed);\r\n    return Math.round(num * mult) / mult;\r\n}\r\n","if (typeof $.fn.selectize === 'function') {\r\n    $.fn.selectize.defaults.loadingClass = 'selectize-loader';\r\n}\r\n//if (typeof $.fn.selectize === 'function') {\r\n    //$.fn.selectize.defaults.loadingClass = 'selectize-loader';\r\n    //':hidden:not([class~=selectized])', ':hidden > .selectized', '.selectize-control .selectize-input input', ':disabled', ':not(:visible):not([class~=selectized])'\r\n//}\r\n\r\n$(document).ready(function () {\r\n\r\n    if (typeof $.fn.tooltip === 'function') {\r\n        var $titles = $('[title]');\r\n        if ($titles.length > 0)\r\n            $titles.tooltip({container: 'body'});\r\n    }\r\n\r\n    if (typeof  $.fn.datetimepicker === 'function') {\r\n        $.fn.datetimepicker.defaults['icons'] = {\r\n            date: \"icon-calendar\",\r\n            up: \"icon-chevron-up\",\r\n            down: \"icon-chevron-down\",\r\n            previous: \"icon-chevron-left\",\r\n            next: \"icon-chevron-right\",\r\n\r\n            time: 'glyphicon glyphicon-time',\r\n            today: 'glyphicon glyphicon-screenshot',\r\n            clear: 'glyphicon glyphicon-trash',\r\n            close: 'glyphicon glyphicon-remove'\r\n        };\r\n    }\r\n\r\n\r\n});\r\n"],"sourceRoot":"/source/"}